{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/Tasks/Netflix-Clone/src/components/ModalMovie.jsx\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movie(_ref) {\n  var _this = this;\n\n  let {\n    movie,\n    show,\n    handleClose,\n    addToFavList\n  } = _ref;\n  return function (movie, addToFavList) {\n    // Getting the required inf from the form\n    function handelFormSubmit(e) {\n      e.preventDefault();\n      let comment = e.target.comment.value;\n      addToFavList(movie, comment);\n    }\n\n    async function addToFavList(movie, comment) {\n      const url = `${process.env.REACT_APP_SERVER}/addMovie`;\n      const data = {\n        title: movie.title,\n        release_date: movie.release_date,\n        poster_path: movie.poster_path,\n        overview: movie.overview,\n        comment: comment\n      }; // Use Fetch to send POST request\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      swal(\"Favorite Movie\", \"You added a new movie\", \"success\");\n      handleClose();\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: movie.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handelFormSubmit,\n        style: {\n          margin: \"0 10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            name: \"comment\",\n            type: \"text\",\n            placeholder: \"Enter Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, _this);\n  }(movie, addToFavList);\n}\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/ahmad/Tasks/Netflix-Clone/src/components/ModalMovie.jsx"],"names":["Modal","Button","Form","swal","Movie","movie","show","handleClose","addToFavList","handelFormSubmit","e","preventDefault","comment","target","value","url","process","env","REACT_APP_SERVER","data","title","release_date","poster_path","overview","response","fetch","method","headers","body","JSON","stringify","margin"],"mappings":"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","sourcesContent":["import Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport swal from 'sweetalert';\n\n\nexport default function Movie({ movie, show, handleClose, addToFavList }) {\n\n  // Getting the required inf from the form\n  function handelFormSubmit(e){\n    e.preventDefault();\n    let comment = e.target.comment.value;\n\n    addToFavList(movie, comment);\n  }\n\n  async function addToFavList(movie, comment){\n    const url = `${process.env.REACT_APP_SERVER}/addMovie`\n  \n    const data = {\n      title : movie.title,\n      release_date : movie.release_date,\n      poster_path : movie.poster_path,\n      overview : movie.overview, \n      comment : comment\n    }\n    // Use Fetch to send POST request\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n       \n      },\n      body: JSON.stringify(data) \n    });\n    swal(\"Favorite Movie\", \"You added a new movie\", \"success\");\n    handleClose();\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>{movie.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{movie.overview}</Modal.Body>\n      <Form onSubmit={handelFormSubmit} style={{margin: \"0 10px\"}}> \n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Comment</Form.Label>\n            <Form.Control name=\"comment\" type=\"text\" placeholder=\"Enter Comment\" />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      <Modal.Footer>\n        \n        <Button variant=\"secondary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}"]},"metadata":{},"sourceType":"module"}