{"ast":null,"code":"var _jsxFileName = \"/home/ahmad/Tasks/Netflix-Clone/src/components/MovieList.jsx\",\n    _s = $RefreshSig$();\n\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport MovieModal from \"./ModalMovie\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet MovieList = _ref => {\n  _s();\n\n  let {\n    movie\n  } = _ref;\n  const [chosenMovie, setChosenMovie] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  function handelChosenMovie(movie) {\n    setChosenMovie(movie);\n    handleShow();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [movie.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\" Title: \", movie.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: movie.overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: () => handelChosenMovie(movie),\n              children: \"Add to Fav\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    }), chosenMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      movie: chosenMovie,\n      show: show,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MovieList, \"Lvajk6e6l01KN6N3ULdIlldDwn0=\");\n\n_c = MovieList;\nexport default MovieList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"sources":["/home/ahmad/Tasks/Netflix-Clone/src/components/MovieList.jsx"],"names":["Card","Button","MovieModal","useState","MovieList","movie","chosenMovie","setChosenMovie","show","setShow","handleClose","handleShow","handelChosenMovie","map","width","poster_path","title","overview","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,IAAIC,SAAS,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMO,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEA,WAASG,iBAAT,CAA2BP,KAA3B,EAAkC;AAChCE,IAAAA,cAAc,CAACF,KAAD,CAAd;AACAM,IAAAA,UAAU;AACX;;AACD,sBACE;AAAA,eACGN,KAAK,CAACQ,GAAN,CAAWR,KAAD,IAAW;AACpB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAES,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AACE,YAAA,OAAO,EAAC,KADV;AAEE,YAAA,GAAG,EAAE,oCAAoCT,KAAK,CAACU;AAFjD;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,qCAAqBV,KAAK,CAACW,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,wBAAYX,KAAK,CAACY;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,SADV;AAEE,cAAA,OAAO,EAAE,MAAML,iBAAiB,CAACP,KAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAK,CAACa,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAoBD,KArBA,CADH,EAuBGZ,WAAW,iBACV,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,WAAnB;AAAgC,MAAA,IAAI,EAAEE,IAAtC;AAA4C,MAAA,WAAW,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA,kBADF;AA6BD,CAxCD;;GAAIN,S;;KAAAA,S;AA0CJ,eAAeA,SAAf","sourcesContent":["import Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport MovieModal from \"./ModalMovie\";\nimport { useState } from \"react\";\n\nlet MovieList = ({ movie }) => {\n  const [chosenMovie, setChosenMovie] = useState();\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  function handelChosenMovie(movie) {\n    setChosenMovie(movie);\n    handleShow();\n  }\n  return (\n    <>\n      {movie.map((movie) => {\n        return (\n          <div key={movie.id}>\n            <Card style={{ width: \"18rem\" }}>\n              <Card.Img\n                variant=\"top\"\n                src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path}\n              />\n              <Card.Body>\n                <Card.Title> Title: {movie.title}</Card.Title>\n                <Card.Text>{movie.overview}</Card.Text>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => handelChosenMovie(movie)}\n                >\n                  Add to Fav\n                </Button>\n              </Card.Body>\n            </Card>\n          </div>\n        );\n      })}\n      {chosenMovie && (\n        <MovieModal movie={chosenMovie} show={show} handleClose={handleClose} />\n      )}\n    </>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}